# Kafka compose
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks: 
      - data-net
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
    user: "0:0"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "sensor_data:1:1"
    ports:
      - "9093:9093"
    networks:
      - data-net
    healthcheck:
      test: kafka-topics --bootstrap-server broker:9092 --list
      interval: 30s
      timeout: 10s
      retries: 3
    user: "0:0"

  producer:
    container_name: producer
    depends_on:
      - zookeeper
      - kafka
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - LOG_LEVEL=${LOG_LEVEL}
        - KAFKA_BROKER=${KAFKA_BROKER}
        - KAFKA_TOPIC=${KAFKA_TOPIC}
        - VECTOR_AGGREGATOR_SINK_ADDR=${VECTOR_AGGREGATOR_SINK_ADDR}
    env_file:
      - ./.env
    volumes:
      - log_data:/app/logs/
    command: >
      sh -c "mkdir -p /app/logs && 
             touch /app/logs/producer.log && 
             chmod 644 /app/logs/producer.log
             uvicorn main:app --host 0.0.0.0 --port 8000"
    ports:
      - "8000:8000"
    networks:
      - data-net
    healthcheck:
      test: curl -f http://localhost:8000/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 3

  vector:
    depends_on:
      - producer
    image: timberio/vector:0.42.0-alpine
    container_name: vector
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
      # mount log file paths as necessary with :ro read only permissions
      - log_data:/var/log/data/stream:ro
    env_file:
      - .env
    ports:  
      - "8686:8686"
    networks:
      - data-net

networks:
  data-net:
    driver: bridge

volumes:
  log_data: 
