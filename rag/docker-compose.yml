# Kafka compose
version: '3.8'

services:
  rag:
    container_name: rag 
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - LOG_LEVEL=${LOG_LEVEL}
        - DATA_INTERVAL=${DATA_INTERVAL}
        - CRON_SLICES=${CRON_SLICES}
        - TOGETHER_ENDPOINT=${TOGETHER_ENDPOINT}
        - TOGETHER_API_KEY=${TOGETHER_API_KEY}
        - TOGETHER_LLM_MODEL=${TOGETHER_LLM_MODEL}
        - CLICKHOUSE_HOST=${CLICKHOUSE_HOST}
        - CLICKHOUSE_PORT=${CLICKHOUSE_PORT}
        - CLICKHOUSE_USERNAME=${CLICKHOUSE_USERNAME}
        # - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD}
        - CLICKHOUSE_DATABASE=${CLICKHOUSE_DATABASE}
        - CLICKHOUSE_TABLE=${CLICKHOUSE_TABLE}
        - VECTOR_AGGREGATOR_SINK_ADDR=${VECTOR_AGGREGATOR_SINK_ADDR}
    env_file:
      - ./.env
    volumes:
      - log_data:/app/logs/
    command: >
      sh -c "mkdir -p /app/logs && 
              touch /app/logs/rag.log && 
              chmod 644 /app/logs/rag.log
              streamlit run app.py"
    ports:
      - "8501:8501"
    networks:
      - grafana_grafana-net
    # healthcheck:
    #   test: curl -f http://localhost:8000/ping || exit 1
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    user: "0:0"

  vector-rag:
    depends_on:
      - rag
    image: timberio/vector:0.42.0-alpine
    container_name: vector
    volumes:
      - ./vector.yaml:/etc/vector/vector.yaml:ro
      # mount log file paths as necessary with :ro read only permissions
      - log_data:/var/log/data/rag:ro
    env_file:
      - .env
    ports:  
      - "8686:8686"
    networks:
      - grafana_grafana-net
 

networks:
  grafana_grafana-net:
    external: true

volumes:
  log_data: 
